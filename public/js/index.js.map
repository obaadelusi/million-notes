{"version":3,"sources":["index.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","myCarouselElement","document","querySelector","carousel","bootstrap","Carousel","interval","touch","load","getElementById","addEventListener","clearFields","preventDefault","hideErrors","formHasErrors","showModal","modal","contactName","innerHTML","concat","classList","add","remove","window","location","replace","hasErrors","emailValue","formInputIsEmpty","emailIsValid","RegExp","trim","style","display","inputIsEmpty","nameInput","emailInput","_i","_contactInputs","input","id","focus","_step","_iterator","getElementsByTagName","_step2","_iterator2","getElementsByClassName","str"],"mappings":"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","file":"index.js","sourcesContent":["const myCarouselElement = document.querySelector(\"#heroCarousel\");\r\n\r\nconst carousel = new bootstrap.Carousel(myCarouselElement, {\r\n    interval: 5000,\r\n    touch: false,\r\n});\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", load);\r\n\r\nfunction load() {\r\n    // Validate form\r\n    document.getElementById(\"reset\").addEventListener(\"click\", clearFields);\r\n\r\n    document.getElementById(\"contact-form\").addEventListener(\"submit\", (e) => {\r\n        e.preventDefault();\r\n        hideErrors();\r\n\r\n        if (!formHasErrors()) {\r\n            showModal();\r\n        }\r\n    });\r\n\r\n    hideErrors();\r\n}\r\n\r\nfunction showModal() {\r\n    const modal = document.getElementById(\"modal\");\r\n\r\n    const contactName = document.getElementById(\"name\").value;\r\n\r\n    document.getElementById(\"modal-wrapper\").innerHTML = `<h3>Hey ${contactName} âœ…,</h3> <p>Thank you for saying hi. <br> Will respond by email shortly.</p><button class=\"btn--black\" id=\"close-modal\">Close</button>`;\r\n\r\n    modal.classList.add(\"show\");\r\n\r\n    const closeModalBtn = document.getElementById(\"close-modal\");\r\n    closeModalBtn.addEventListener(\"click\", () => {\r\n        modal.classList.remove(\"show\");\r\n\r\n        window.location.replace(\"https://obaadelusi.github.io\");\r\n    });\r\n}\r\n\r\nfunction formHasErrors() {\r\n    let hasErrors = false;\r\n\r\n    // const phoneValue = document.getElementById(\"phone\").value;\r\n    const emailValue = document.getElementById(\"email\").value;\r\n\r\n    if (formInputIsEmpty()) {\r\n        hasErrors = true;\r\n    }\r\n\r\n    // const phoneRegex = new RegExp(/^(\\+\\d{1,2}\\s?)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/);\r\n    // const phoneIsValid = phoneRegex.test(trim(phoneValue));\r\n\r\n    // if (trim(phoneValue).length > 0 && !phoneIsValid) {\r\n    //     document.getElementById(`phoneformat_error`).style.display = \"block\";\r\n    //     hasErrors = true;\r\n    //}\r\n\r\n    const emailRegex = new RegExp(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/);\r\n    const emailIsValid = emailRegex.test(trim(emailValue));\r\n\r\n    if (trim(emailValue).length > 0 && !emailIsValid) {\r\n        document.getElementById(`emailformat_error`).style.display = \"block\";\r\n        hasErrors = true;\r\n    }\r\n\r\n    return hasErrors;\r\n}\r\n\r\nfunction formInputIsEmpty() {\r\n    let inputIsEmpty = false;\r\n\r\n    const nameInput = document.getElementById(\"name\"),\r\n        // phoneInput = document.getElementById(\"phone\"),\r\n        emailInput = document.getElementById(\"email\"),\r\n        messageTxt = document.getElementById(\"message\");\r\n\r\n    const contactInputs = [messageTxt, emailInput, nameInput];\r\n\r\n    for (const input of contactInputs) {\r\n        if (trim(input.value).length == 0) {\r\n            document.getElementById(`${input.id}_error`).style.display = \"block\";\r\n            inputIsEmpty = true;\r\n            input.focus();\r\n        }\r\n    }\r\n\r\n    return inputIsEmpty;\r\n}\r\n\r\nfunction clearFields() {\r\n    const inputs = document.getElementsByTagName(\"input\");\r\n\r\n    for (const input of inputs) {\r\n        input.value = \"\";\r\n    }\r\n}\r\n\r\nfunction hideErrors() {\r\n    const errors = document.getElementsByClassName(\"input-error\");\r\n\r\n    for (const inputError of errors) {\r\n        inputError.style.display = \"none\";\r\n    }\r\n}\r\n\r\n/**\r\n * Removes whitespace from a string value.\r\n * @param str The string to trim.\r\n * @returns A string with leading and trailing white-space removed.\r\n */\r\nfunction trim(str) {\r\n    // Uses a regex to remove spaces from a string.\r\n    return str.replace(/^\\s+|\\s+$/g, \"\");\r\n}\r\n"]}